#!/usr/bin/env sh
# launch script for plan9port's Acme text editor

if [ -z "$PLAN9" ]; then
	echo "error: PLAN9 not defined, was plan9port installed?" 1>&2
	exit 1
fi
if ! command -v acme 2>&1 >/dev/null; then
	echo "error: acme not found in PATH, was plan9port installed?" 1>&2
	exit 1
fi

usage() {
	echo "usage: $0 [-fi] [-c ncol] [-t tab_stop] [file ...]" 1>&$1
	echo "Launch the Acme text editor." 1>&$1
	echo "Use -f to have a proportional font as the primary font." 1>&$1
	# -i option implemented by https://github.com/ixtenu/plan9port/commit/6146ab0734c5
	echo "Use -i to enable Spaces ON at start up (requires patched Acme)." 1>&$1
	echo "Use -c ncol to set the initial number of columns (default 1)." 1>&$1
	echo "Use -t tab_stop to customize distance between tab stops (default 4)." 1>&$1
	exit $(($1 - 1))
}

tabstop=4
fopt=0
aopts="-a" # always run with -a (equivalent to executing "Indent ON")
ncol=1
while getopts fic:t:h name; do
	case $name in
	f) fopt=1;;
	i) aopts="$aopts -i";;
	c) ncol=$OPTARG;;
	t) tabstop=$OPTARG;;
	h) usage 1;;
	?) usage 2;;
	esac
done
shift $(($OPTIND - 1))
aopts="$aopts -c $ncol"

# add the directory containing this script to the PATH so that other
# Acme-specific scripts in the same directory will be available within Acme
bindir="$(cd -- "$(dirname $(readlink -f "$0"))" 2>&1 >/dev/null && pwd -P)"
export PATH="$bindir:$PATH"

# rc is Plan 9's shell
export SHELL=rc
export acmeshell=rc
# distance between tab stops (set above)
export tabstop
# Acme's win terminal doesn't do colors, bold, etc.
export TERM=dumb
# nobs removes backspaces from man pages
export PAGER=nobs
# E opens in Acme and waits for Put.  If git config core.editor is unset,
# this suffices for git commit to open an Acme window.
export EDITOR=E

if command -v firefox 2>&1 >/dev/null; then
	export BROWSER=firefox
elif command -v brave 2>&1 >/dev/null; then
	export BROWSER=brave
elif command -v netsurf 2>&1 >/dev/null; then
	export BROWSER=netsurf
elif command -v netsurf-gtk 2>&1 >/dev/null; then
	export BROWSER=netsurf-gtk
fi

if [ ! "$(pgrep plumber)" ]; then
	echo starting plumber
	plumber
fi

# Preferred proportional and monospace fonts.  To review the available fonts:
#
# fontsrv &
# 9p ls font | less
# fg
# ^C
font_prop=/mnt/font/DejaVuSans/11a/font
font_mono=/mnt/font/Hack-Regular/11a/font

if [ $fopt -eq 0 ]; then
	# By default, use a monospace font as the primary font and a
	# proportional font as the secondary font: the reverse of the usual
	# convention for Acme.  I do this because I work on projects which
	# (unfortunately) make heavy use of spaces for alignment and that
	# requires a monospace font to display correctly.
	font1=$font_mono
	font2=$font_prop
else
	font1=$font_prop
	font2=$font_mono
fi

# Run with 9 to prefer plan9port executables within Acme.
# Suppress error messages (might want to remove this for debugging).
9 acme $aopts -f $font1 -F $font2 "$@" 2>/dev/null &
